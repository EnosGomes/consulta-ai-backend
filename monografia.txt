Regras de Negócio

Hospitais são Unidades de Saúde
CNES -> Lugar onde os médicos e hospitais devem ser cadastrados. É obrigatório para toda a unidade de saúde.
(Exemplo: Clinicas, Consultorios em geral, policlinicas, hospitais, fisio, etc)
Medicos deveriam mandar documentação provando serem médicos credenciados e não são falsos.
Junto do CNES deve se vincular os hospitais onde o médico trabalha.

Para fazer cadastro no CNES primeiro deve se procurar um orgão gesto de saúde
a nível municipal ou estadual, que ai vai exigir documentos como alvará de funcionamento
da vigilância sanitária e da prefeitura.

Unidades de Saúde ligadas ao SUS precisam ter mais informações que unidades pequenas.
Planos de Saúde por exemplo exigem cadastro no CNES

O SCNES é uma versão menor do CNES para unidades de saúde menores.

--------------------------------------------------------------------------
Mudanças:

Hospitais devem se chamar Unidades de Saúde
Talvez é uma boa consultar os dados dela no CNES: https://apidadosabertos.saude.gov.br/cnes/estabelecimentos/2308665

--------------------------------------------------------------------
Vindas do notepad++

Monografia Sistema - Consulta sem precisar ir presencial

Cadastrar hospitais, consultas, usuarios e medicos.
Eu cadastro um pedido de consulta , o medico quando
tiver disponibilidade vai retornar com uma data agendada.

Ou o usuário olha em um calendário as datas disponiveis
horários que o médico está disponível

Cadastra hospital? Sim, mas falta muito dados.
Cadastra usuário? Não
Cadastra Paciente? Não
Cadastra Médico? Sim, mas falta muito dados
Cadastra consulta? Não 
Envia informações por email,
como cadastrado efetuado, esqueci senha, 
consulta confirmada, reagendada, etc? Não
mostrar itens do menu e opcoes de acordo com o perfil (mostrar a parte de usuarios e paciente
somente para quem eh admin)


Quando tudo aqui estiver com a resposta "sim",
o sistema está pronto para a monografia.

-------------------------------------------------------------------------------------------------

O componente de consulta precisa de um calendar 
para marcar a data do agendamento da consulta 

Consulta só pode ser criada depois que o paciente for 
criado porque vamos usar o id dele e so fazer um update

Quem sabe um chat bot para conversar com o paciente
e ele pedir informacoes como consultas marcadas

Quem sabe um CI CD com o git para subir tudo direto
na nuvem

Analisar quais pacientes terão prioridade de consultas


-----------------------------------------------------------------------------------------------------------------------

Coisas vindas do Google Docs

Terminar o backend:
Fase 1
Fazer um CRUD completo de Hospital ( )
Fazer um CRUD completo de Médico ( )
Fazer um CRUD completo de Paciente ( )
Fazer um CRUD completo de Consulta ( )
Escrever o básico no documento e colar a pesquisa que fiz noo google sheets

Fase 2
Paciente solicita marcação de consulta -> Escolhe a especialidade, não escolhe lugar ( )
Paciente recebe a confirmação de pedido de marcação ( )
Alguém recebe o pedido e coloca uma data ( )
Hospital / Clínica é escolhida para a consulta ( )
Paciente recebe o dia da marcação da consulta e hora por email / notificação tela ()
Tentar excluir entidade relacionadas e com dependências()

Vai ter um batch que vai rodar para saber se a consulta já está disponível ?()

Fase 3
Paginar registros ()
Dockerizar ()
Usar o flyway ()
Colocar na nuvem ()

Fase 4 - Provavelmente nao vai precisar
Aplicativo android / ios ()
Receber informações via whatsapp ()
Modal / Carrousel no primeiro acesso mostrando com informações do sistema()

Diagrama / Desenho da solução:

https://app.diagrams.net/#HEnosGomes%2Fconsulta-ai-backend%2Fmaster%2FUntitled%20Diagram.drawio

—-------------------------

Faltar pegar as collection no computador windows do Postman ( )
Montagem ambiente sem docker

Montagem ambiente com DockerFile

crie um arquivo dockerfile : touch Dockerfile

Coloque do arquivo Dockerfile:
# Derivando da imagem oficial do MySQL
FROM mysql:5.7
# Adicionando os scripts SQL para serem executados na criação do banco
COPY ./db/ /docker-entrypoint-initdb.d/

Depois build a imagem que você criou:
sudo docker build -t backoffice-db .

docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=RootPassword -e MYSQL_DATABASE=Backoffice -e MYSQL_USER=MainUser -e MYSQL_PASSWORD=MainPassword backoffice-db

docker exec -it container_id bash

mysql -uroot -p

RootPassword




Montagem ambiente com docker compose

Crie um arquivo chamado docker-compose.yml

Preenche esse arquivo com:



